name: CI

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v[0-9]*'
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup Dynawo
        env:
          DYNAWO_VERSION: 1.3.1
        run: |
          wget https://github.com/dynawo/dynawo/releases/download/v${DYNAWO_VERSION}/Dynawo_Linux_v${DYNAWO_VERSION}.zip
          unzip Dynawo_Linux_v${DYNAWO_VERSION}.zip
          rm -f Dynawo_Linux_v${DYNAWO_VERSION}.zip

      - name: Checkout network store sources
        uses: actions/checkout@v1
        with:
          repository: powsybl/powsybl-network-store
          ref: refs/heads/main

      - name: Build and install network store client with Maven
        run: mvn --batch-mode -Pclient -DskipTests=true --file ../powsybl-network-store/pom.xml install

      - name: Checkout powsybl core sources
        uses: actions/checkout@v1
        with:
          repository: powsybl/powsybl-core
          ref: 8efff2802

      - name: Build and install powsybl core with Maven
        run: mvn --batch-mode -DskipTests=true --file ../powsybl-core/pom.xml install

      - name: Checkout powsybl dynawo sources
        uses: actions/checkout@v1
        with:
          repository: powsybl/powsybl-dynawo
          ref: 60025b77

      - name: Build and install powsybl dynawo with Maven
        run: mvn --batch-mode -DskipTests=true --file ../powsybl-dynawo/pom.xml install

      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Build with Maven
        run: mvn --batch-mode -P jacoco verify

      - name: Run SonarCloud analysis
        run: >
          mvn --batch-mode -DskipTests sonar:sonar
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.organization=gridsuite
          -Dsonar.projectKey=org.gridsuite:dynamic-simulation-server
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build Docker image - Main
        if: github.ref == 'refs/heads/main'
        run: >
          mvn --batch-mode deploy -DskipTests -Dmaven.install.skip -Dmaven.deploy.skip -Dpowsybl.docker.deploy
          -Djib.httpTimeout=60000
          -Djib.to.image=docker.io/gridsuite/dynamic-simulation-server
          -Djib.to.auth.username=gridsuiteci
          -Djib.to.auth.password=${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image - Tag
        if: startsWith(github.ref, 'refs/tags/')
        run: >
          mvn --batch-mode deploy -DskipTests -Dmaven.install.skip -Dmaven.deploy.skip -Dpowsybl.docker.deploy
          -Djib.httpTimeout=60000
          -Djib.to.image=docker.io/gridsuite/dynamic-simulation-server:${GITHUB_REF_NAME#v}
          -Djib.to.auth.username=gridsuiteci
          -Djib.to.auth.password=${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Broadcast update event
        if: github.ref == 'refs/heads/main'
        uses: gridsuite/broadcast-event@main
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: dynamic_simulation_server_updated
